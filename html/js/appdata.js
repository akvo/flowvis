// Generated by CoffeeScript 1.7.1
var App;

App = Ember.Application.create();

App.ApplicationAdapter = DS.FixtureAdapter.extend();

App.Flowdata = DS.Model.extend({
  surveyDate: DS.attr('date'),
  submitter: DS.attr('string'),
  settlement: DS.attr('string'),
  wPtype: DS.attr('string'),
  hPtype: DS.attr('string'),
  status: DS.attr('string'),
  mainProblem: DS.attr('string'),
  constructionDate: DS.attr('date'),
  whoInstalled: DS.attr('string'),
  usedForDrinking: DS.attr('boolean'),
  quality: DS.attr('string'),
  quantity: DS.attr('string'),
  waterCommittee: DS.attr('boolean'),
  collectMoney: DS.attr('string'),
  photo: DS.attr('string'),
  latitude: DS.attr('number'),
  longitude: DS.attr('number')
});

App.IndexView = EmberLeaflet.MapView.extend({
  center: L.latLng(6.22, -9.25),
  zoom: 9,
  didInsertElement: function() {
    var ctrl, feature, fields, flowdata, g, map, svg, update;
    update = function() {
      return typeof feature !== "undefined" && feature !== null ? feature.attr("transform", function(d) {
        return "translate(" + (map.latLngToLayerPoint(d.LatLng).x) + ", " + (map.latLngToLayerPoint(d.LatLng).y) + ")";
      }) : void 0;
    };
    feature = null;
    this._super();
    map = this._layer;
    svg = d3.select(map.getPanes().overlayPane).append("svg").attr("width", map.getSize().x).attr("height", map.getSize().y);
    g = svg.append("g").attr("class", "leaflet-zoom-hide");
    ctrl = this.get('controller');
    flowdata = {
      objects: []
    };
    fields = [];
    Ember.get(App.Flowdata, 'fields').forEach(function(field) {
      return fields.push(field);
    });
    ctrl.store.find('flowdata').then(function(data) {
      data.forEach(function(item) {
        var d, f, _i, _len;
        d = {};
        for (_i = 0, _len = fields.length; _i < _len; _i++) {
          f = fields[_i];
          d[f] = item.get(f);
        }
        d.LatLng = new L.LatLng(item.get('latitude'), item.get('longitude'));
        return flowdata.objects.push(d);
      });
      return feature = g.selectAll("circle").data(flowdata.objects).enter().append("circle").style("stroke", "black").style("opacity", 0.6).style("fill", function(d) {
        if (d.quality.istartswith("soft")) {
          return "green";
        }
        return "red";
      }).attr("r", 5);
    });
    map.on("viewreset", update);
    return setInterval(update, 1000);
  }
});

window.App = App;
